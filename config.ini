#############################################
# Generic Ecohydrological model
# Configuration file
###########################################


# Paths
Maps_Folder = ./spatial/
Clim_Maps_Folder = ./climate/
Output_Folder = ./outputs/

# Model configuration
Simul_start = 2524608000 # Seconds since 1900-1-1 00:00:00
Simul_end = 1420156800 # in second  # Seconds from 1980-1-1 to 2024-12-31
Simul_tstep = 86400 # seconds (daily)
Clim_input_tstep = 86400 # seconds (daily)
Ground_input_tstep = 604800 # seconds (every 7 days)
Report_interval = -3 # The interval of map reports in seconds; or daily (-1), monthly (-2), or annually (-3) 
Update_interval = 315619200  # seconds (every 10 years); the interval for land use / soil type update 

# Options 
# How is climate inputs orgainsed?
# 1: raster
# 2: aggregated binary file (climate_zone file should be specified)
opt_climate_input_format = 2
# How is Ground time series inputs orgainsed?
# 1: raster
# 2: aggregated binary file (Time series should be prepared for each of the category; input.bin.shape = (N of timestep, num_category))
opt_groundTs_input_format = 1
# Enable isotopic tracking?
# 0: disabled
# 1: enabled
opt_tracking_isotope = 1
# Enable water age tracking?
# 0: disabled
# 1: enabled
opt_tracking_age = 1
# Enable nitrogen simulation?
# 0: disabled
# 1: enabled
opt_nitrogen_sim = 1
# Agricultural irrigation
# 0: disabled
# 1: enabled
opt_irrigation = 1
# Reinfiltration during overland flow routing
opt_reinfil = 1
# Canopy interception
# 1 :maximum canopy storage unmodified
# 2 :storage corrected (Landarf et al., 2024)
opt_intecept = 1
# Snow accumulation method
# 1: Degree day factor method
opt_snow = 1
# Pedo-transfer function to estimate Van Genuchten parameters
# 1: Wosten et al., (1999)
# 2: Wosten et al., (1997)
# 3: Zacharias et al., (2007)
opt_pedotransf = 1
# Method to estimate field capacity
# 1: based on Van Genuchten Model
# 2: Ks considered, Twarakavi et al., (2007)
opt_fieldcapacity = 2
# The way to estimate soil characteristics in deeper layer
# 1: All layers remain the same
# 2: exponential profile based on depth
# 3: Pedo-transfer function for each layer
opt_depthprofile = 3
# Iniltration model
# 1: Green-Ampt model
# 2: based on soil deficit and a exponential parameter; Feddes et al., (1976)
opt_infil = 1
# Canopy evaporation function
# 0: Disabled
#1: based on PET and a exponential function Liang et al. (1994)
opt_canopy_evap = 0
# Evapotranspiration function
# 1: based on PET and a soil water dependent root extraction function (Feddes et al., 1976)
opt_evap = 1
# Percolation model
# 1: based on travel time and excess water above FC; SWAT
# 2: based on soil deficit and a exponential parameter; Feddes et al., (1976)                        
# 3: based on soil deficit
opt_percolation = 1
# Include initial GW storage into calibration 
# 0: Read from asc inputs
# 1: Included for calibration
opt_init_GW = 1
# Overland flow routing
# 1: All ponding water goes to next cell
opt_routOvf = 1
# Interflow routing
# 1: linear approximation of Kinematic Wave
opt_routinterf = 1
# GW routing
# 1: linear approximation of Kinematic Wave
opt_routGWf = 1
# Stream routing
# 1: Kinematic Wave
opt_routQ = 1
# Channel evaporation
# 0: Disabled
# 1: Penman equation
# 2: Penman equation with constant wind speed
# 3: Priestley-Taylor equation
opt_chanE = 1
# Whether to adjust the d18o compostion in inital storages
# 0: NO
# 1: YES (the parameter d18o_init_GW needs to be specified)
opt_init_d18o = 0
# Whether to adjust the no3 compostion in inital storages
# 0: NO
# 1: YES (the parameter no3_init_GW needs to be specified)
opt_init_no3 = 0
# The format of fertilization inputs
# 1: A raster map showing the potential fertilization amount in g/m2
# 2: Specificed for each vegetation type in Crop_info.ini
opt_fert_input = 1

### Climate
# The number of climate zones will be estimated from climate_zone raster as the maximum number.
climate_zones = climate_zones.asc # Needed if opt_climate_input_format = 2; Zone ID should start from 1!
Precipitation  =  P.bin   # Precipitation [m]
Air_temperature  =  Ta.bin   # Air temperature [degree C]
Relative_humidity  =  RH.bin   # Relative humidity [decimal]
Potential_evapotranspiration  =  PET.bin   # Potential evapotranspiration [m]
Air_pressure  =  airpressure.bin   # Air pressure [Pa]
Wind_speed  =  windspeed.bin   # Wind speed at 2 m [m/s]
Net_radiation  =  Rnet.bin   # Net radiation [W/m2]
d18O_Precipitation  =  d18o_P.bin   # d18O in precipitation [‰]

### GroundTs
Leaf_area_index  =  LAI.bin   # Leaf area index [decimal]

### GIS
flow_direction  =  fdir.asc   # Flow direction [int; d8 method]
Gauge_mask  =  Gauge_to_Report.asc   # Gauges that require outputs [int; start from 0]
# The sequence of reports follows the row-col order
#For instance, [row 1, col 1] ->  [row 1, col 2] -> [row 2, col 1]
Channel_width  =  chnwidth.asc   # Channel width [m]
Channel_depth  =  chndepth.asc   # Channel depth [m]
Channel_length  =  chnlength.asc   # Channel length [m]
slope  =  slope.asc   # Slope [m/m]
Soil_depth1  =  depth1.asc   # Depth of soil layer 1 [m]
Soil_depth2  =  depth2.asc   # Depth of soil layer 2 [m]
sand1  =  sand1.asc   # Sand content of layer 1 [decimal]
sand2  =  sand2.asc   # Sand content of layer 2 [decimal], only needed when opt_depthprofile = 3
sand3  =  sand3.asc   # Sand content of layer 3 [decimal], only needed when opt_depthprofile = 3
clay1  =  clay1.asc   # Clay content of layer 1 [decimal]
clay2  =  clay2.asc   # Clay content of layer 2 [decimal], only needed when opt_depthprofile = 3
clay3  =  clay3.asc   # Clay content of layer 3 [decimal], only needed when opt_depthprofile = 3
silt1  =  silt1.asc   # Silt content of layer 1 [decimal], only needed when opt_pedotransf = 1 or 2
silt2  =  silt2.asc   # Silt content of layer 2 [decimal], only needed when opt_depthprofile = 3
silt3  =  silt3.asc   # Silt content of layer 3 [decimal], only needed when opt_depthprofile = 3
organic1  =  organic1.asc   # Organic content of layer 1 [decimal]
organic2  =  organic2.asc   # Organic content of layer 2 [decimal], only needed when opt_depthprofile = 3
organic3  =  organic3.asc   # Organic content of layer 3 [decimal], only needed when opt_depthprofile = 3
bulk_density1  =  bulkdensity1.asc   # Bulk density of layer 1 [g/cm3]
bulk_density2  =  bulkdensity2.asc   # Bulk density of layer 2 [g/cm3], only needed when opt_depthprofile = 3
bulk_density3  =  bulkdensity3.asc   # Bulk density of layer 3 [g/cm3], only needed when opt_depthprofile = 3
N_fertilization  =  N_fertilization.asc   # The fertilization amount [g/m2], only needed when opt_fert_input = 1

### Storages
canopy_storage  =  I.asc   # Canopy storage [m]
snow_depth  =  snow.asc   # Snow depth in [m]
pond  =  pond.asc   # Ponding water in [m]
SMC_layer1  =  theta1.asc   # Soil moisture in layer 1 [decimal]
SMC_layer2  =  theta2.asc   # Soil moisture in layer 2 [decimal]
SMC_layer3  =  theta3.asc   # Soil moisture in layer 3 [decimal]
groundwater_storage  =  GW.asc   # Groundwater storage [m]

### Fluxes
discharge  =  Q.asc   # Discharge [m3/s]

### Tracking
d18o_canopy_storage  =  d18o_I.asc   # d18o in Canopy storage [‰]
d18o_snow_depth  =  d18o_snow.asc   # d18o in Snow depth in [‰]
d18o_pond  =  d18o_pond.asc   # d18o in Ponding water in [‰]
d18o_SMC_layer1  =  d18o_layer1.asc   # d18o in Soil moisture in layer 1 [‰]
d18o_SMC_layer2  =  d18o_layer2.asc   # d18o in Soil moisture in layer 2 [‰]
d18o_SMC_layer3  =  d18o_layer3.asc   # d18o in Soil moisture in layer 3 [‰]
d18o_groundwater_storage  =  d18o_GW.asc   # d18o in Groundwater storage [‰]
d18o_chanS  =  d18o_chanS.asc   # d18o in Channel storage [‰]
age_canopy_storage  =  age_I.asc   # age in Canopy storage [days]
age_snow_depth  =  age_snow.asc   # age in Snow depth in [days]
age_pond  =  age_pond.asc   # age in Ponding water in [days]
age_SMC_layer1  =  age_layer1.asc   # age in Soil moisture in layer 1 [days]
age_SMC_layer2  =  age_layer2.asc   # age in Soil moisture in layer 2 [days]
age_SMC_layer3  =  age_layer3.asc   # age in Soil moisture in layer 3 [days]
age_groundwater_storage  =  age_GW.asc   # age in Groundwater storage [days]
age_chanS  =  age_chanS.asc   # age in Channel storage [days]

### Nitrogen
no3_canopy_storage  =  no3_I.asc   # no3 in Canopy storage [mgN/L]
no3_snow_depth  =  no3_snow.asc   # no3 in Snow depth in [mgN/L]
no3_pond  =  no3_pond.asc   # no3 in Ponding water in [mgN/L]
no3_SMC_layer1  =  no3_layer1.asc   # no3 in Soil moisture in layer 1 [mgN/L]
no3_SMC_layer2  =  no3_layer2.asc   # no3 in Soil moisture in layer 2 [mgN/L]
no3_SMC_layer3  =  no3_layer3.asc   # no3 in Soil moisture in layer 3 [mgN/L]
no3_groundwater_storage  =  no3_GW.asc   # no3 in Groundwater storage [mgN/L]
no3_chanS  =  no3_chanS.asc   # no3 in Channel storage [mgN/L]
humusN1  =  humusN1.asc   # Humus nitrogen storage in layer 1 [mgN/L*m = gN/m2]
humusN2  =  humusN2.asc   # Humus nitrogen storage in layer 2 [mgN/L*m = gN/m2]
humusN3  =  humusN3.asc   # Humus nitrogen storage in layer 3 [mgN/L*m = gN/m2]
fastN1  =  fastN1.asc   # Fast nitrogen storage in layer 1 [mgN/L*m = gN/m2]
fastN2  =  fastN2.asc   # Fast nitrogen storage in layer 2 [mgN/L*m = gN/m2]
fastN3  =  fastN3.asc   # Fast nitrogen storage in layer 3 [mgN/L*m = gN/m2]

### Parameters
num_category = 13 # The number of categories for parameterisation ...
#The categories should include the land use types, soil types, or any other types for parameterisation ...
#The distribution of each category (in decimal proportion) should be specified in cat_id.asc ...
#The first category (column) represents global parameter (i.e., cat_0.bin should be filled with 1)
parameter_file = param.ini # The file contains all parameter name, values, and descriptio. Each column =  a category
Soil_depth3  =  depth3   # Depth of soil layer 3 [m]
alpha  =  alpha   # The weighting parameter that links LAI and maximum canopy storage [-]
rE  =  rE   # Parameter regulates the surface cover fraction, rExtinct = -0.463 Rutter (1972)
snow_rain_threshold  =  snow_rain_thre   # The temperature for snow melt  [m]
deg_day_min  =  deg_day_min   # Degree-day factor with no precipitation [m-1 degreeC-1]
deg_day_max  =  deg_day_max   # Maximum Degree-day factor [m-1 degreeC-1]
deg_day_increase  =  deg_day_increase   # Increase of the Degree-day factor per mm of increase in precipitation precipitation [s-1 degreeC-1]
ref_thetaS  =  ref_thetaS   # Reference saturated soil moisture [-]
PTF_VG_clay  =  PTF_VG_clay   # Pedotransfer function for parameter estimation of Van Genuchten Model [-]
PTF_VG_Db  =  PTF_VG_Db   # Pedotransfer function for parameter estimation of Van Genuchten Model [-]
PTF_Db  =  PTF_Ks_const   # Pedotransfer parameter for estimation of saturated hydraulic conductivity [-]
PTF_sand  =  PTF_Ks_sand   # Pedotransfer parameter for estimation of saturated hydraulic conductivity [-]
PTF_clay  =  PTF_Ks_clay   # Pedotransfer parameter for estimation of saturated hydraulic conductivity [-]
PTF_Ks_slope  =  PTF_Ks_slope   # Slope correction for estimation of saturated hydraulic conductivity [-]
SWP  =  SWP   # Soil water potentail for field capacity estimation [-], only needed when opt_fieldcapacity = 1
KvKh  =  KvKh   # The coefficient to transform Ks to effective Ks [-], only needed when opt_infil = 1
psiAE  =  psiAE   # The wetting front potential for Green-Ampt model [mm], only needed when opt_infil = 1
Ksat  =  KKs   # The exponential parameter for depth-dependent saturated hydraulic conductivity [-], only needed when opt_depthprofile = 2
Kporos  =  Ksat   # The exponential parameter for depth-dependent saturated moisture content  [-], only needed when opt_depthprofile = 2
BClambda  =  BClambda   # The exponential parameter for depth-dependent field capacity  [-], only needed when opt_depthprofile = 2
percExp  =  percExp   # The exponential parameter for percolation [-], only needed when opt_percolation = 2
froot_coeff  =  froot_coeff   # Root fraction coefficient [-]
ET_reduction  =  ET_reduction   # ET reduction (weight) [-]
init_GW  =  init_GW   # The initial GW storage [m], only needed when opt_init_GW = 1
wRecharge  =  wRecharge   # The weighting parameter for GW recharge [-], only needed when opt_recharge = 1
pOvf_toChn  =  pOvf_toChn   # The weighting linear parameter for overland flow routing towards channel  [-]
Ks_vadose  =  Ks_vadose   # The reference conductivity of vadose zone for interflow routing [m/s]
Ks_GW  =  Ks_GW   # The reference conductivity of GW zone for interflow routing [m/s]
lat_to_Chn_vadose  =  lat_to_Chn_vadose   # The ratio between conductivities of lateral flow and channel recharge in vadose zone [-]
lat_to_Chn_GW  =  lat_to_Chn_GW   # The ratio between conductivities of lateral flow and channel recharge in GW zone [-]
interfExp  =  interfExp   # The exponetial weighting parameter for interflow flow routing towards channel  [-]
GWfExp  =  GWfExp   # The exponetial weighting parameter for GW flow routing towards channel  [-]
Manningn  =  Manningn   # Manning N for stream routing [-], only needed when opt_routQ = 1
Echan_alpha  =  Echan_alpha   # correction factor in Priestley-Taylor equation [-], only needed when opt_chanE = 1 or 2
irrigation_coeff  =  irrigation_coeff   # Irrigation coefficient to determine the actual water demand from water deficit [-], only needed when irrigation is enabled
nearsurface_mixing  =  nearsurface_mixing   # The proportion of pond to mix with layer1  [decimal]
ratio_to_interf  =  ratio_to_interf   # The proportion of excess storage in layer 1 that routs as interflow (otherwise percolate to GW) [decimal]
CG_n_soil  =  CG_n_soil   # Parameter N in CG model for soil water fractionation [-]
delta_d18o_init_GW  =  delta_d18o_init_GW   # Initial d18O of GW storage [‰]
delta_d18o_init_GW  =  delta_no3_init_GW   # Initial no3 of GW storage [‰]
denitrification_river  =  denitrification_river   # Reference rates of aquatic denitrification [-]
denitrification_soil  =  denitrification_soil   # Reference rates of soil denitrification [kg/ha]
degradation_soil  =  degradation_soil   # Reference rates of soil degradation [kg/ha]
mineralisation_soil  =  mineralisation_soil   # Reference rates of soil mineralisation [kg/ha]
deni_soil_moisture_thres  =  deni_soil_moisture_thres   # The moisture threshold of soil denitrification


### Reports
# 1: report maps; 2: report time series at gauging stations
report_canopy_storage  =  0   # Canopy storage [m]
report_snow_depth  =  0   # Snow depth in [m]
report_pond  =  0   # Ponding water in [m]
report_SMC_layer1  =  0   # Soil moisture in layer 1 [decimal]
report_SMC_layer2  =  0   # Soil moisture in layer 2 [decimal]
report_SMC_layer3  =  0   # Soil moisture in layer 3 [decimal]
report_groundwater_storage  =  0   # Groundwater storage [m]
report_throufall  =  0   # Throughfall [m]
report_snowmelt  =  0   # Snow melt [m]
report_infiltration  =  0   # Inflitration into soil layer 1 [m]
report_perc_layer1  =  0   # Percolation into layer 2 [m]
report_perc_layer2  =  0   # Percolation into layer 3 [m]
report_perc_layer3  =  0   # Percolation into gw reservior [m]
report_rinfiltration  =  0   # Reinflitration into soil layer 1 [m]
report_rperc_layer1  =  0   # Repercolation into layer 2 due to overland flow routing [m]
report_rperc_layer2  =  0   # Repercolation into layer 3 due to overland flow routing [m]
report_rperc_layer3  =  0   # Repercolation into gw reservior due to overland flow routing [m]
report_rrperc_layer3  =  0   # Repercolation into gw reservior due to interflow routing [m]
report_canopy_evap  =  0   # Canopy evaporation [m]
report_soil_evap  =  0   # Soil evaporation [m]
report_transp  =  0   # Total transpiration in three layers [m]
report_transp_layer1  =  0   # Transpiration in layer 1 [m]
report_transp_layer2  =  0   # Transpiration in layer 2 [m]
report_transp_layer3  =  0   # Transpiration in layer 3 [m]
report_irrigation_from_river  =  0   # Water extraction from river [m]
report_irrigation_from_GW  =  0   # Water extraction from GW [m]
report_overland_flow_input  =  0   # Overland flow from upstream cell(s) [m]
report_overland_flow_output  =  0   # Overland flow to downstream cell [m]
report_overland_flow_toChn  =  0   # Overland flow to Channel [m]
report_interflow_input  =  0   # Interflow from upstream cell(s) [m]
report_interflow_output  =  0   # Interflow to downstream cell [m]
report_interflow_toChn  =  0   # Interflow to Channel [m]
report_GWflow_input  =  0   # GW flow from upstream cell(s) [m]
report_GWflow_output  =  0   # GW flow to downstream cell [m]
report_GWflow_toChn  =  0   # Groundwater flow to Channel [m]
report_discharge  =  0   # Discharge [m3/s]
report_channel_evaporation  =  0   # Channel evaporation [m]
report_d18o_canopy_storage  =  0   # d18o in Canopy storage [‰]
report_d18o_snow_depth  =  0   # d18o in Snow depth in [‰]
report_d18o_pond  =  0   # d18o in Ponding water in [‰]
report_d18o_SMC_layer1  =  0   # d18o in Soil moisture in layer 1 [‰]
report_d18o_SMC_layer2  =  0   # d18o in Soil moisture in layer 2 [‰]
report_d18o_SMC_layer3  =  0   # d18o in Soil moisture in layer 3 [‰]
report_d18o_groundwater_storage  =  0   # d18o in Groundwater storage [‰]
report_d18o_chanS  =  0   # d18o in Channel storage [‰]
report_age_canopy_storage  =  0   # age in Canopy storage [days]
report_age_snow_depth  =  0   # age in Snow depth in [days]
report_age_pond  =  0   # age in Ponding water in [days]
report_age_SMC_layer1  =  0   # age in Soil moisture in layer 1 [days]
report_age_SMC_layer2  =  0   # age in Soil moisture in layer 2 [days]
report_age_SMC_layer3  =  0   # age in Soil moisture in layer 3 [days]
report_age_groundwater_storage  =  0   # age in Groundwater storage [days]
report_age_chanS  =  0   # age in Channel storage [days]
report_no3_canopy_storage  =  0   # no3 in Canopy storage [mgN/L]
report_no3_snow_depth  =  0   # no3 in Snow depth in [mgN/L]
report_no3_pond  =  0   # no3 in Ponding water in [mgN/L]
report_no3_SMC_layer1  =  0   # no3 in Soil moisture in layer 1 [mgN/L]
report_no3_SMC_layer2  =  0   # no3 in Soil moisture in layer 2 [mgN/L]
report_no3_SMC_layer3  =  0   # no3 in Soil moisture in layer 3 [mgN/L]
report_no3_groundwater_storage  =  0   # no3 in Groundwater storage [mgN/L]
report_no3_chanS  =  0   # no3 in Channel storage [mgN/L]
report_nitrogen_addition  =  0   # Nitrogen addition of fertilizer, manure, and plant residues [mgN/L*m = gN/m2]
report_plant_uptake  =  0   # Plant uptake [mgN/L*m = gN/m2]
report_deni_soil  =  0   # Soil denitrification [mgN/L*m = gN/m2]
report_minerl_soil  =  0   # Soil mineralisation [mgN/L*m = gN/m2]
report_degrad_soil  =  0   # Soil degradation [mgN/L*m = gN/m2]
report_deni_river  =  0   # Aquatic denitrification [mgN/L*m = gN/m2]
